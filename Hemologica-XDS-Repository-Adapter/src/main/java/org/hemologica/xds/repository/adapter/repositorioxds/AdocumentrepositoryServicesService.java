
package org.hemologica.xds.repository.adapter.repositorioxds;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "adocumentrepository_servicesService", targetNamespace = "RepositorioXDS", wsdlLocation = "file:/home/bruno/Desarrollo/Proyectos/XDS-Saluduy-Client/adocumentrepository_services.wsdl")
public class AdocumentrepositoryServicesService
    extends Service
{

    private final static URL ADOCUMENTREPOSITORYSERVICESSERVICE_WSDL_LOCATION;
    private final static WebServiceException ADOCUMENTREPOSITORYSERVICESSERVICE_EXCEPTION;
    private final static QName ADOCUMENTREPOSITORYSERVICESSERVICE_QNAME = new QName("RepositorioXDS", "adocumentrepository_servicesService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
        	
            url = new URL("file:/Users/paularoche/Documents/Git/Hemologica/Hemologica-XDS-Repository-Adapter/src/main/resources/wsdl/adocumentrepository_services.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ADOCUMENTREPOSITORYSERVICESSERVICE_WSDL_LOCATION = url;
        ADOCUMENTREPOSITORYSERVICESSERVICE_EXCEPTION = e;
    }

    public AdocumentrepositoryServicesService() {
        super(__getWsdlLocation(), ADOCUMENTREPOSITORYSERVICESSERVICE_QNAME);
    }

    public AdocumentrepositoryServicesService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ADOCUMENTREPOSITORYSERVICESSERVICE_QNAME, features);
    }

    public AdocumentrepositoryServicesService(URL wsdlLocation) {
        super(wsdlLocation, ADOCUMENTREPOSITORYSERVICESSERVICE_QNAME);
    }

    public AdocumentrepositoryServicesService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ADOCUMENTREPOSITORYSERVICESSERVICE_QNAME, features);
    }

    public AdocumentrepositoryServicesService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AdocumentrepositoryServicesService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Adocumentrepository
     */
    @WebEndpoint(name = "adocumentrepositoryPort")
    public Adocumentrepository getAdocumentrepositoryPort() {
        return super.getPort(new QName("RepositorioXDS", "adocumentrepositoryPort"), Adocumentrepository.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Adocumentrepository
     */
    @WebEndpoint(name = "adocumentrepositoryPort")
    public Adocumentrepository getAdocumentrepositoryPort(WebServiceFeature... features) {
        return super.getPort(new QName("RepositorioXDS", "adocumentrepositoryPort"), Adocumentrepository.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ADOCUMENTREPOSITORYSERVICESSERVICE_EXCEPTION!= null) {
            throw ADOCUMENTREPOSITORYSERVICESSERVICE_EXCEPTION;
        }
        return ADOCUMENTREPOSITORYSERVICESSERVICE_WSDL_LOCATION;
    }

}
